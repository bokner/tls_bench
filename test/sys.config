[
    {tls_bench, [
        {impls, [gen_tcp, ssl, fast_tls, p1_tls]},
        {servers, [

            {acceptors, 20},

            {listen_opt, [
                {send_timeout, 30000},
                {send_timeout_close, true},
                {backlog, 5000},
                {sndbuf, 60000},
		{buffer, 60000},
                {recbuf, 60000}
            ]},

            {tls_opt, [
                {certfile, "priv/server.pem"},
                %note: format is different for each framework. this input is preprocessed
                %by tlsb_config:get_ciphers/1. For ssl use list for all other join by : .
                {ciphers, ["AES128-GCM-SHA256"]}
            ]},

            {ssl, [
                {port, 4000},
                {verify, verify_none}
            ]},

            {p1_tls, [
                {port, 5000},
                {verify_none, compression_none}
            ]},

            {fast_tls, [
                {port, 6000},
                {verify_none, compression_none}
            ]},

            {etls, [
                {port, 7000},
                    {verify, verify_none}
            ]},

            {gen_tcp, [
                {port, 8000}
            ]}
        ]},

        {client, [
            {tls_opt, [
                {certfile, "priv/server.pem"},
                {ciphers, ["AES128-GCM-SHA256"]}
            ]},

            {tcp_opt, [
                binary,
                {nodelay, true},
                {packet, 0},
                {active, true},
                {sndbuf, 60000},
                {recbuf, 60000}
            ]},

            {ssl, [{tls_opt, [{verify, verify_none}]}]},
            {p1_tls, [{tls_opt, [verify_none, compression_none]}]},
            {fast_tls, [{tls_opt, [verify_none, compression_none]}]},
            {etls, [{tls_opt, [{verify, verify_none}]}]},
            {gen_tcp, []},

            {host, "127.0.0.1"},
            {connect_timeout, 30000},
            {recv_timeout, infinity}
        ]}
    ]}
].
